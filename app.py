# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XoK0Mz4NpV1kV9yupqBQia0zMH91eVAp
"""

import streamlit as st
import numpy as np
import os
from tensorflow.keras.models import load_model
from PIL import Image

# Class names used in the model
class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',
               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']

# Load the trained model with error handling
model_path = 'best_model.h5'
if os.path.exists(model_path):
    model = load_model(model_path)
    st.success("Model loaded successfully.")
else:
    st.error("best_model.h5 not found. Please make sure the model file is in the same directory.")
    st.stop()

st.title("Fashion MNIST Classifier")
st.write("Upload a 28x28 grayscale image of a clothing item (e.g., T-shirt, sandal, coat).")

# File uploader to get user image input
uploaded_file = st.file_uploader("Choose an image...", type=["png", "jpg", "jpeg"])

if uploaded_file:
    # Convert image to grayscale and resize to 28x28
    img = Image.open(uploaded_file).convert('L')
    img = img.resize((28, 28))
    img_array = np.array(img).astype("float32") / 255.0  # Normalize to [0,1]
    img_reshaped = np.expand_dims(img_array, axis=(0, -1))  # Reshape to (1, 28, 28, 1)

    # Display image preview
    st.image(img, caption='Uploaded Image (Resized)', width=150)

    # Predict using the loaded model
    prediction = model.predict(img_reshaped)
    predicted_class = np.argmax(prediction)
    confidence = np.max(prediction) * 100

    # Output the prediction result
    st.success(f"Prediction: **{class_names[predicted_class]}** ({confidence:.2f}% confidence)")

    # Optional: Show bar chart of all class probabilities
    st.subheader("Class Probabilities:")
    prob_chart = {class_names[i]: float(prediction[0][i]) for i in range(10)}
    st.bar_chart(prob_chart)
